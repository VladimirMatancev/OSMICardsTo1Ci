Функция  СоздатьКарту() Экспорт
	Карта1С = ОСМИ_ОбщиеСервер.Получить1СКарту(Ссылка);
	
	Если Карта1С = Неопределено Тогда  
		ЗаписьЖурналаРегистрации("ОСМИ.Ошибка",УровеньЖурналаРегистрации.Ошибка,Ссылка,,
		"Нет объекта 1с, связанного с электронной картой" + Код);
		Возврат Неопределено;
	КонецЕсли;	
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("values",новый Массив);
	
	Для Каждого Стр из Шаблон.ПоляШаблона Цикл
		
		Если не ЗначениеЗаполнено(Стр.СпособПолучения) Тогда 
			Продолжить;
		КонецЕсли;
		
		СпособПолучения = Стр.СпособПолучения;
		
		Если ТипЗнч(СпособПолучения) = Тип("Строка") Тогда 
			НовыеДанные = СпособПолучения;	
		Иначе
			НовыеДанные = СпособПолучения.ПолучитьОбъект().ПолучитьЗначениеПоля(Карта1С);
		КонецЕсли;
		
		СтруктураПоля = Новый Структура;
		СтруктураПоля.Вставить("label",Стр.Имя);
		СтруктураПоля.Вставить("value",НовыеДанные);
		
		СтруктураПараметров.values.Добавить(СтруктураПоля);		
		
	КонецЦикла;
	Возврат ОСМИ_РаботаСAPI.СоздатьКарту(Код,Шаблон.Наименование,истина,СтруктураПараметров);	
КонецФункции

Процедура УстановитьЗначенияПолей() Экспорт
	
	ДанныеКарты = ОСМИ_РаботаСAPI.ЗапроситьИнформациюПокарте(Код);
	
	Если ДанныеКарты.Успех = ложь Тогда
		Карта1С = СоздатьКарту();
		ДанныеКарты = ОСМИ_РаботаСAPI.ЗапроситьИнформациюПокарте(Код);
		Если ДанныеКарты.Успех = Ложь Тогда
			ЗаписьЖурналаРегистрации("ОСМИ.Ошибка",УровеньЖурналаРегистрации.Ошибка,Ссылка,,
			"Нет объекта 1с, связанного с электронной картой " + Код);
			Возврат;
		КонецЕсли;
	Иначе 
		Карта1С = ОСМИ_ОбщиеСервер.Получить1СКарту(Ссылка);
	КонецЕсли;
	
	Если Карта1С = Неопределено Тогда  
		ЗаписьЖурналаРегистрации("ОСМИ.Ошибка",УровеньЖурналаРегистрации.Ошибка,Ссылка,,
		"Нет объекта 1с, связанного с электронной картой " + Код);
		Возврат
	КонецЕсли;	
	
	СтруктураПараметровСПуш = Новый Структура;
	СтруктураПараметровСПуш.Вставить("values",новый Массив);
	
	СтруктураПараметровБезПуш = Новый Структура;
	СтруктураПараметровБезПуш.Вставить("values",новый Массив);
	
	Для Каждого Стр из Шаблон.ПоляШаблона Цикл
		
		Если не ЗначениеЗаполнено(Стр.СпособПолучения) Тогда 
			Продолжить;
		КонецЕсли;
		
		СпособПолучения = Стр.СпособПолучения;
		
		Если ТипЗнч(СпособПолучения) = Тип("Строка") Тогда 
			НовыеДанные = СпособПолучения;	
		Иначе
			НовыеДанные = СпособПолучения.ПолучитьОбъект().ПолучитьЗначениеПоля(Карта1С);
		КонецЕсли;
		
		Добавлять = Истина;
		
		Для Каждого СтрКарты из ДанныеКарты.Ответ.values Цикл
			Если СтрКарты.value = НовыеДанные и СтрКарты.label = Стр.Имя Тогда 
				Добавлять = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Добавлять Тогда			
			СтруктураПоля = Новый Структура;
			СтруктураПоля.Вставить("label",СокрЛП(Стр.Имя));
			СтруктураПоля.Вставить("value",СокрЛП(НовыеДанные));
			Если Стр.ОтправлятьПУШ Тогда
				СтруктураПараметровСПуш.values.Добавить(СтруктураПоля);		
			Иначе
				СтруктураПараметровБезПуш.values.Добавить(СтруктураПоля);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПараметровСПуш.Вставить("barcode",Новый Структура);
	
	Если ТипЗнч(Шаблон.СпособПолученияСодержимогоБаркода) = Тип("Строка") Тогда
		СтруктураПараметровСПуш.barcode.Вставить("message",Шаблон.СпособПолученияСодержимогоБаркода);
	ИначеЕсли ЗначениеЗаполнено(Шаблон.СпособПолученияСодержимогоБаркода) Тогда 
		СтруктураПараметровСПуш.barcode.Вставить("message",Шаблон.СпособПолученияСодержимогоБаркода.ПолучитьОбъект().ПолучитьЗначениеПоля(Карта1С));
	КонецЕсли;
	
	Если ТипЗнч(Шаблон.СпособПолученияСодержимогоПодписи) = Тип("Строка") Тогда
		СтруктураПараметровСПуш.barcode.Вставить("signature",Шаблон.СпособПолученияСодержимогоПодписи);
	ИначеЕсли ЗначениеЗаполнено(Шаблон.СпособПолученияСодержимогоПодписи) Тогда 
		СтруктураПараметровСПуш.barcode.Вставить("signature",Шаблон.СпособПолученияСодержимогоПодписи.ПолучитьОбъект().ПолучитьЗначениеПоля(Карта1С));
	КонецЕсли;
	
	СтруктураПараметровСПуш.barcode.Вставить("show",Шаблон.ОтображатьБаркод);
	СтруктураПараметровСПуш.barcode.Вставить("showSignature",Шаблон.ОтображатьПодпись);
	
	Если СтруктураПараметровСПуш.values.Количество() > 0 Тогда
		ОСМИ_РаботаСAPI.ОбновитьЗначенияКарты(Код,СтруктураПараметровСПуш);
	КонецЕсли;
	Если СтруктураПараметровБезПуш.values.Количество() > 0 Тогда	
		ОСМИ_РаботаСAPI.ОбновитьЗначенияКарты(Код,СтруктураПараметровБезПуш, Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьЗначенияССервера() Экспорт
	Карта = ОСМИ_РаботаСAPI.ЗапроситьИнформациюПоКарте(Код);
	Если Карта.Успех Тогда
		ПоляКарты.Очистить();
		Для Каждого Значение  из Карта.Ответ.values Цикл
			Стр = ПоляКарты.Добавить();
			Стр.Поле = Значение.label;
			Стр.Значение = Значение.value; 
		КонецЦикла;
		ДополнительнаяИнформация = "";
		Для Каждого Стр из Карта.Ответ.general Цикл
			ДополнительнаяИнформация = ДополнительнаяИнформация + 
			Стр.Ключ + " : " +
			Стр.Значение + Символы.ПС;
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если не ОбменДанными.Загрузка Тогда
		ОбновитьКарту(не ЭтоНовый())
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если не Шаблон = Ссылка.Шаблон и не ЭтоНовый() Тогда
		ОСМИ_РаботаСAPI.СменитьШаблон(Код,Шаблон.Наименование);	
	КонецЕсли;
	
	Если НЕ ОбменДанными.Загрузка Тогда
		СохранитьИзмененныеПоля();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьКарту(Запись = ложь) Экспорт
	
	Если не ЭтоНовый() Тогда 
		ПередатьДанныеКартыНаСервер();
	КонецЕсли;
	
	Если Не Запись Тогда
		Записать()
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьКартуИзКарты1С(Карта1С) Экспорт
	
	Попытка
		НачатьТранзакцию();	
		Если не ЭтоНовый() Тогда
			Возврат //
		КонецЕсли;
		
		Если Карта1С = Неопределено Тогда  
			ЗаписьЖурналаРегистрации("ОСМИ.Ошибка",УровеньЖурналаРегистрации.Ошибка,Ссылка,,
			"Не указан объекта 1с");
			Возврат;
		КонецЕсли;	
		
		СсылкаНового = Справочники.ОСМИ_ЭлектроннаяКарта.ПолучитьСсылку();
		
		Наименование = Карта1С.Наименование;
		Рег = РегистрыСведений.ОСМИ_СоответствиеКарт.СоздатьМенеджерЗаписи();
		Рег.ОбъектБазы = Карта1С.Ссылка;
		Рег.ЭлектроннаяКарта = СсылкаНового;
		Рег.Записать();
		
		УстановитьСсылкуНового(СсылкаНового);
		УстановитьНовыйКод();
		ОбменДанными.Загрузка = Истина;
		Если Шаблон.Пустая() Тогда
			Шаблон = Константы.ОСМИ_ШаблонПоУмолчанию.Получить();
			Если Шаблон.Пустая() Тогда
				ТестОшибки = "Не установлен шаблон по умолчанию для новых карт ОСМИ";
				Сообщить(ТестОшибки);
				ВызватьИсключение ТестОшибки;
			КонецЕсли;
		КонецЕсли;
		
		Записать();
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("values",новый Массив);
		
		Для Каждого Стр из Шаблон.ПоляШаблона Цикл
			
			Если не ЗначениеЗаполнено(Стр.СпособПолучения) Тогда 
				Продолжить;
			КонецЕсли;
			
			СпособПолучения = Стр.СпособПолучения;
			
			Если ТипЗнч(СпособПолучения) = Тип("Строка") Тогда 
				НовыеДанные = СпособПолучения;	
			Иначе
				НовыеДанные = СпособПолучения.ПолучитьОбъект().ПолучитьЗначениеПоля(Карта1С);
			КонецЕсли;
			
			СтруктураПоля = Новый Структура;
			СтруктураПоля.Вставить("label",Стр.Имя);
			СтруктураПоля.Вставить("value",НовыеДанные);
			
			СтруктураПараметров.values.Добавить(СтруктураПоля);		
			
		КонецЦикла;
		
		Результат = ОСМИ_РаботаСAPI.СоздатьКарту(Код, Шаблон.Наименование,истина,СтруктураПараметров);
		Если НЕ Результат.Успех Тогда
			ТестОшибки = "Ошибка создания карты на сервисе ОСМИ - " + Результат.ТекстОтвета;
			Сообщить(ТестОшибки);
			ВызватьИсключение ТестОшибки;
		КонецЕсли;
		
		ОбновитьЗначенияССервера();
		
		Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

Процедура СохранитьИзмененныеПоля()
	
	ДоИзмТЧ = Ссылка.ПоляКарты;
	
	мИзмененныеПоля = Новый Массив;
	Для Каждого стр Из ПоляКарты Цикл
		
		Найдено = ДоИзмТЧ.Найти(стр.Поле, "Поле");
		Если Найдено = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если стр.Значение <> Найдено.Значение Тогда
			мПоле = Новый Структура("ИмяПоля, ЗначениеПоля", стр.Поле, стр.Значение);
			мИзмененныеПоля.Добавить(мПоле);
		КонецЕсли;
		
	КонецЦикла;
	
	ДополнительныеСвойства.Вставить("ОСМИ_ИзмененныеПоля", мИзмененныеПоля);	
	
КонецПроцедуры

Процедура ПередатьДанныеКартыНаСервер()
	
	ДанныеКарты = ОСМИ_РаботаСAPI.ЗапроситьИнформациюПокарте(Код);
	
	Если ДанныеКарты.Успех = Ложь Тогда
		Карта1С = СоздатьКарту();
		Если Карта1С = Неопределено ИЛИ Карта1С.Успех = Ложь Тогда
			ЗаписьЖурналаРегистрации("ОСМИ.Ошибка",УровеньЖурналаРегистрации.Ошибка,Ссылка,,
			"Нет объекта ОСМИ, связанного с картой " + Код);
			Возврат;
		Иначе
			ДанныеКарты = ОСМИ_РаботаСAPI.ЗапроситьИнформациюПокарте(Код);
		КонецЕсли;
	Иначе 
		Карта1С = ОСМИ_ОбщиеСервер.Получить1СКарту(Ссылка);
	КонецЕсли;
	
	Если Карта1С = Неопределено Тогда  
		ЗаписьЖурналаРегистрации("ОСМИ.Ошибка",УровеньЖурналаРегистрации.Ошибка,Ссылка,,
		"Нет объекта 1с, связанного с электронной картой " + Код);
		Возврат
	КонецЕсли;	
	
	СтруктураПараметровСПуш = Новый Структура;
	СтруктураПараметровСПуш.Вставить("values",новый Массив);
	
	СтруктураПараметровБезПуш = Новый Структура;
	СтруктураПараметровБезПуш.Вставить("values",новый Массив);
	
	ПоляШаблона = Шаблон.ПоляШаблона;
	
	Если ДополнительныеСвойства.Свойство("ОСМИ_ИзмененныеПоля") Тогда
		мИзмененныеПоля = ДополнительныеСвойства.ОСМИ_ИзмененныеПоля;
	Иначе
		мИзмененныеПоля = Новый Массив;
	КонецЕсли;
	
	Для каждого стр Из мИзмененныеПоля Цикл
		
		ОтправлятьПУШ = Ложь;
		
		стрШаблон = ПоляШаблона.Найти(стр.ИмяПоля, "Имя");
		Если стрШаблон <> Неопределено Тогда
			ОтправлятьПУШ = стрШаблон.ОтправлятьПУШ;
		КонецЕсли;
		
		СтруктураПоля = Новый Структура;
		СтруктураПоля.Вставить("label", СокрЛП(стр.ИмяПоля));
		СтруктураПоля.Вставить("value", СокрЛП(стр.ЗначениеПоля));
		Если ОтправлятьПУШ Тогда
			СтруктураПараметровСПуш.values.Добавить(СтруктураПоля);		
		Иначе
			СтруктураПараметровБезПуш.values.Добавить(СтруктураПоля);
		КонецЕсли;
		
	КонецЦикла;
	
	Если СтруктураПараметровСПуш.values.Количество() > 0 Тогда
		ОСМИ_РаботаСAPI.ОбновитьЗначенияКарты(Код, СтруктураПараметровСПуш);
	КонецЕсли;
	
	Если СтруктураПараметровБезПуш.values.Количество() > 0 Тогда
		ОСМИ_РаботаСAPI.ОбновитьЗначенияКарты(Код, СтруктураПараметровБезПуш, Ложь);
	КонецЕсли;
	
КонецПроцедуры