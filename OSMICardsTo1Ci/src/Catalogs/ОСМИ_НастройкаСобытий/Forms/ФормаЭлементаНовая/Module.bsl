&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокВыбора = Новый Массив;
	Для Каждого МТД Из Метаданные.Справочники Цикл
		СписокВыбора.Добавить(МТД.ПолноеИмя());	
	КонецЦикла;
	Для Каждого МТД Из Метаданные.Документы Цикл
		СписокВыбора.Добавить(МТД.ПолноеИмя());
	КонецЦикла;	
	Для Каждого МТД Из Метаданные.РегистрыНакопления Цикл
		СписокВыбора.Добавить(МТД.ПолноеИмя());		
	КонецЦикла;
	Для Каждого МТД Из Метаданные.РегистрыСведений Цикл
		СписокВыбора.Добавить(МТД.ПолноеИмя());		
	КонецЦикла;
	Элементы.ОбъектКонфигурации.СписокВыбора.ЗагрузитьЗначения(СписокВыбора);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектКонфигурацииПриИзменении(Элемент)
	Объект.ТабличнаяЧасть = "";
	Объект.Поле = "";
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ТабЧастьПриИзменении(Элемент)
	Объект.Поле = "";
	ОбновитьФорму();
	ОбновитьКод();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму()
	СтруктураДляОтображения = 
	ПолучитьСтруктуруФормы(
	Объект.ОбъектКонфигурации,
	Объект.ТабличнаяЧасть);
	
	ЭтаФорма.Элементы.СправочникДокумент.Видимость =  СтруктураДляОтображения.Тип = "Справочник";
	ЭтаФорма.Элементы.Регистр.Видимость =  (СтруктураДляОтображения.Тип = "РегистрНакопления" или СтруктураДляОтображения.Тип = "РегистрСведений");
	
	Если СтруктураДляОтображения.Тип = "Справочник" Тогда 
		Элементы.ТабЧасть.СписокВыбора.ЗагрузитьЗначения(СтруктураДляОтображения.ТЧ);
	ИначеЕсли СтруктураДляОтображения.Тип = "РегистрНакопления" Тогда
		Если СтруктураДляОтображения.ТипРегистра = "Остаток" Тогда	
			Массив = Новый Массив;
			Массив.Добавить("Оборот");
			Массив.Добавить("Остаток");
			Массив.Добавить("Запись");
			
			Элементы.ТипРегистра.СписокВыбора.ЗагрузитьЗначения(Массив);	
		Иначе
			Массив = Новый Массив;
			Массив.Добавить("Оборот");
			Массив.Добавить("Запись");

			Элементы.ТипРегистра.СписокВыбора.ЗагрузитьЗначения(Массив);	
		КонецЕсли;
	Иначе
		Если СтруктураДляОтображения.ТипРегистра = "Непериодический" Тогда	
			Массив = Новый Массив;
			Массив.Добавить("Запись");

			Элементы.ТипРегистра.СписокВыбора.ЗагрузитьЗначения(Массив);	
		Иначе
			Массив = Новый Массив;
			Массив.Добавить("Срез первых");
			Массив.Добавить("Срез последних");
			Массив.Добавить("Запись");

			Элементы.ТипРегистра.СписокВыбора.ЗагрузитьЗначения(Массив);	
		КонецЕсли;
	КонецЕсли;	 
	
	ОбновитьИнтерфейс();
	//Элементы.Поле.СписокВыбора.ЗагрузитьЗначения(СтруктураДляОтображения.Поля);
	
	ОбновитьДерево();	
	//ОбновитьКод();
	
	ДействиеПриИзменении(Неопределено);
	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКод()
	Об = РеквизитФормыВЗначение("Объект");
	СтрокаУсловий = "";
	СтрокаПараметров = "";
	Если не СокрЛП(Об.ПолеОсновногоОтбора) = "" Тогда
		СтрокаУсловий = СтрокаУсловий + 
		"Где Таблица." + Об.ПолеОсновногоОтбора + " = &Карта";
		СтрокаПараметров =  СтрокаПараметров +
		"Запрос.УстановитьПараметр(""Карта"",Источник);" + Символы.ПС;
	КонецЕсли;
	
	Для Каждого Поле Из Об.Отборы Цикл
		СтрокаУсловий = СтрокаУсловий + ?(СтрДлина(СокрЛП(СтрокаУсловий)) > 0," и ","Где ") +
		"Таблица." + Поле.Параметр + " = &" +Поле.Параметр;
		СтрокаПараметров =  СтрокаПараметров +
		"Запрос.УстановитьПараметр("""+Поле.Параметр+""",Отборы.Получить("+(Поле.НомерСтроки-1)+").Значение);" + Символы.ПС;	
	КонецЦикла;
	
	Об.ТекстПрограммы = "";
	Об.ТекстПрограммы = Об.ТекстПрограммы  + 
	"Запрос = новый Запрос; " + Символы.ПС;
	Об.ТекстПрограммы = Об.ТекстПрограммы  + 
	"Запрос.Текст = "" Выбрать Таблица%Поле% как Поле из %ИмяТаблицы% как Таблица %Условия%  ""; "  + Символы.ПС;
	Об.ТекстПрограммы = Об.ТекстПрограммы  + 
	СтрокаПараметров;
	Об.ТекстПрограммы = Об.ТекстПрограммы  + 
	"Выб = Запрос.Выполнить().выбрать(); " + Символы.ПС;
	Об.ТекстПрограммы = Об.ТекстПрограммы  + 
	"Пока Выб.Следующий() Цикл " + Символы.ПС;	
	Об.ТекстПрограммы = Об.ТекстПрограммы  + 
	"	Результат.Добавить(Выб.Поле) " + Символы.ПС;	
	Об.ТекстПрограммы = Об.ТекстПрограммы  + 
	"КонецЦикла; " + Символы.ПС;	


	//СтрокаТаблица = СтрЗаменить(Объект.ОбъектКонфигурации + Объ,
	

	ИмяТаблицы = "";
	Если Найти(Об.ОбъектКонфигурации,"Справочник") = 1 или Найти(Об.ОбъектКонфигурации,"Документ") = 1 Тогда
		ИмяТаблицы = Об.ОбъектКонфигурации + ?(СтрДлина(СокрЛП(Об.ТабличнаяЧасть)) = 0,"","."+Об.ТабличнаяЧасть);	
		Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы,"%Поле%",Об.Поле);
	ИначеЕсли Найти(Об.ОбъектКонфигурации,"РегистрНакопления") = 1 Тогда
		Если Об.ТипРегистра = "Запись" Тогда
			ИмяТаблицы = Об.ОбъектКонфигурации;
			Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы,"%Поле%",Об.Поле);
		ИначеЕсли Об.ТипРегистра = "Остаток" Тогда 
			Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы,"%Поле%",Об.Поле+"Остаток");
			ИмяТаблицы = Об.ОбъектКонфигурации+".Остатки";
		ИначеЕсли Об.ТипРегистра = "Оборот" Тогда 
			ИмяТаблицы = Об.ОбъектКонфигурации+".Обороты";
			Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы,"%Поле%",Об.Поле+"Оборот");
		КонецЕсли;
	ИначеЕсли Найти(Об.ОбъектКонфигурации,"РегистрСведений") = 1  Тогда 
		Если Об.ТипРегистра = "Запись" Тогда
			ИмяТаблицы = Об.ОбъектКонфигурации;
		ИначеЕсли Об.ТипРегистра = "Срез первых" Тогда 
			ИмяТаблицы = Об.ОбъектКонфигурации+".СрезПервых";
		ИначеЕсли Об.ТипРегистра = "Срез последних" Тогда 
			ИмяТаблицы = Об.ОбъектКонфигурации+".СрезПоследних";
		КонецЕсли;
		Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы,"%Поле%",Об.Поле);
	КонецЕсли;
	
	Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы,"%ИмяТаблицы%",ИмяТаблицы); 
	Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы,"%Условия%",СтрокаУсловий);

	ЗначениеВРеквизитФормы(Об,"Объект");
КонецПроцедуры

&НаСервере
Процедура ОбновитьДерево()
	Дерево = РеквизитФормыВЗначение("СписокВыбораИзДерева");
	Дерево.Строки.Очистить();
	
	Если СокрЛП(Объект.ОбъектКонфигурации) = "" Тогда
		Возврат
	КонецЕсли;
		
	Если Найти(Объект.ОбъектКонфигурации,"Справочник") = 1 или Найти(Объект.ОбъектКонфигурации,"Документ") = 1  Тогда
		Если ЗначениеЗаполнено(Объект.ТабличнаяЧасть) Тогда 
			Реквизиты = Метаданные.НайтиПоПолномуИмени(Объект.ОбъектКонфигурации).ТабличныеЧасти[Объект.ТабличнаяЧасть].Реквизиты;
		Иначе
			Реквизиты = Метаданные.НайтиПоПолномуИмени(Объект.ОбъектКонфигурации).Реквизиты;
		КонецЕсли;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			Типы = Реквизит.Тип.Типы(); 	
			
			Для Каждого тип Из Типы Цикл
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр = Дерево.Строки.Добавить();
				Стр.Поле = Реквизит.Имя;
				Стр.Тип = Тип;
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр.ПолноеИмя = ?(МТД = Неопределено,"",МТД.ПолноеИмя());
				Стр.ИмяВДереве = Объект.ОбъектКонфигурации + "." + Реквизит.Имя;
			КонецЦикла;
		КонецЦикла;
		
		Стр = Дерево.Строки.Добавить();
		Стр.Поле = "Ссылка";
		//Стр.Тип = Метаданные.НайтиПоПолномуИмени(Объект.ОбъектКонфигурации).;
		//МТД = Метаданные.НайтиПоТипу(Тип);
		//Стр.ПолноеИмя = ?(МТД = Неопределено,"",МТД.ПолноеИмя());
		Стр.ИмяВДереве = Объект.ОбъектКонфигурации + ".Ссылка";
		
	ИначеЕсли Найти(Объект.ОбъектКонфигурации,"РегистрНакопления") = 1 Тогда
		Реквизиты = Метаданные.НайтиПоПолномуИмени(Объект.ОбъектКонфигурации).Измерения;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			Типы = Реквизит.Тип.Типы(); 	
			
			Для Каждого тип Из Типы Цикл
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр = Дерево.Строки.Добавить();
				Стр.Поле = Реквизит.Имя;
				Стр.Тип = Тип;
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр.ПолноеИмя = ?(МТД = Неопределено,"",МТД.ПолноеИмя());
				Стр.ИмяВДереве = Объект.ОбъектКонфигурации + "." + Реквизит.Имя;
			КонецЦикла;
		КонецЦикла;		
		
		Реквизиты = Метаданные.НайтиПоПолномуИмени(Объект.ОбъектКонфигурации).Ресурсы;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			Типы = Реквизит.Тип.Типы(); 	
			
			Для Каждого тип Из Типы Цикл
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр = Дерево.Строки.Добавить();
				Стр.Поле = Реквизит.Имя;
				Стр.Тип = Тип;
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр.ПолноеИмя = ?(МТД = Неопределено,"",МТД.ПолноеИмя());
				Стр.ИмяВДереве = Объект.ОбъектКонфигурации + "." + Реквизит.Имя;
			КонецЦикла;
		КонецЦикла;		

	ИначеЕсли Найти(Объект.ОбъектКонфигурации,"РегистрСведений") = 1 Тогда
		Реквизиты = Метаданные.НайтиПоПолномуИмени(Объект.ОбъектКонфигурации).Измерения;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			Типы = Реквизит.Тип.Типы(); 	
			
			Для Каждого тип Из Типы Цикл
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр = Дерево.Строки.Добавить();
				Стр.Поле = Реквизит.Имя;
				Стр.Тип = Тип;
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр.ПолноеИмя = ?(МТД = Неопределено,"",МТД.ПолноеИмя());
				Стр.ИмяВДереве = Объект.ОбъектКонфигурации + "." + Реквизит.Имя;
			КонецЦикла;
		КонецЦикла;		
		Реквизиты = Метаданные.НайтиПоПолномуИмени(Объект.ОбъектКонфигурации).Ресурсы;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			Типы = Реквизит.Тип.Типы(); 	
			
			Для Каждого тип Из Типы Цикл
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр = Дерево.Строки.Добавить();
				Стр.Поле = Реквизит.Имя;
				Стр.Тип = Тип;
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр.ПолноеИмя = ?(МТД = Неопределено,"",МТД.ПолноеИмя());
				Стр.ИмяВДереве = Объект.ОбъектКонфигурации + "." + Реквизит.Имя;
			КонецЦикла;
		КонецЦикла;	
	КонецЕсли;
	 
	ЗначениеВРеквизитФормы(Дерево,"СписокВыбораИзДерева");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруФормы(Имя,ИмяТч)
	СтруктураДляОтображения = Новый Структура;
	СтруктураДляОтображения.Вставить("Поля",Новый Массив);
	СтруктураДляОтображения.Вставить("ТЧ",Новый Массив);
	СтруктураДляОтображения.Вставить("Тип");
	СтруктураДляОтображения.Вставить("ТипРегистра");

	
	МТД = Метаданные.НайтиПоПолномуИмени(Имя);	
	Если Найти(Имя,"Справочник") = 1 или Найти(Имя,"Документ") = 1  Тогда
		
		СтруктураДляОтображения.Тип = "Справочник";
		
		СтруктураДляОтображения.Поля.Добавить("Ссылка");

		Если ИмяТч = "" Тогда
			Таб = МТД.Реквизиты ;
		Иначе
			Таб = МТД.ТабличныеЧасти[ИмяТч].Реквизиты;
		КонецЕсли;
		Для Каждого МТД1 из Таб Цикл
			СтруктураДляОтображения.Поля.Добавить(Мтд1.имя);
		КонецЦикла;
		
		Для Каждого Таб из МТД.ТабличныеЧасти Цикл
			СтруктураДляОтображения.ТЧ.Добавить(Таб.Имя);
		КонецЦикла;			
		
	ИначеЕсли Найти(Имя,"РегистрНакопления") = 1 Тогда
		СтруктураДляОтображения.Тип = "РегистрНакопления";
		
		Если (МТД.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки) Тогда 
			СтруктураДляОтображения.ТипРегистра = "Остатки";
		Иначе
			СтруктураДляОтображения.ТипРегистра = "Обороты";
		КонецЕсли;	
		
		Для Каждого МТД1 из МТД.Измерения Цикл
			СтруктураДляОтображения.Поля.Добавить(Мтд1.имя);
		КонецЦикла;
		
		Для Каждого МТД1 из МТД.Ресурсы Цикл
			СтруктураДляОтображения.Поля.Добавить(Мтд1.имя);
		КонецЦикла;
	
	ИначеЕсли Найти(Имя,"РегистрСведений") = 1 Тогда
		
		СтруктураДляОтображения.Тип = "РегистрСведений";
				
		Если (МТД.ПериодичностьРегистраСведений = Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический) Тогда 
			СтруктураДляОтображения.ТипРегистра = "Непериодический";
		Иначе
			СтруктураДляОтображения.ТипРегистра = "Периодический";
		КонецЕсли;	
		
		Для Каждого МТД1 из МТД.Измерения Цикл
			СтруктураДляОтображения.Поля.Добавить(Мтд1.имя);
		КонецЦикла;
		
		Для Каждого МТД1 из МТД.Ресурсы Цикл
			СтруктураДляОтображения.Поля.Добавить(Мтд1.имя);
		КонецЦикла;
		
	КонецЕсли;		
	Возврат СтруктураДляОтображения;
КонецФункции

&НаКлиенте
Процедура УстановитьОсновнымПолемОтбора(Команда)
	Объект.ПолеОсновногоОтбора = ЭтаФорма.Элементы.СписокВыбораИзДерева.ТекущиеДанные.Поле;
	ОбновитьКод();
КонецПроцедуры

&НаСервере
Процедура ДобавитьВСписокОтборовНаСервере(Поле)
	Об = РеквизитФормыВЗначение("Объект");
		
	Стр = Об.Отборы.Добавить();	
	Стр.Параметр = Поле;  
	
	ЗначениеВРеквизитФормы(Об,"Объект");
	ОбновитьКод()

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВСписокОтборов(Команда)
	ДобавитьВСписокОтборовНаСервере(ЭтаФорма.Элементы.СписокВыбораИзДерева.ТекущиеДанные.Поле);
	ОбновитьКод();
КонецПроцедуры

&НаКлиенте
Процедура ПолеПриИзменении(Элемент)
	ОбновитьКод();
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаСервере()
	Попытка
		Об = РеквизитФормыВЗначение("Объект");
		Результат = Об.ПолучитьЗначениеПоля(Об.КартаДляПроверки);
		Сообщить(Результат);
	Исключение
		сообщить(ОписаниеОшибки());
	КонецПопытки;
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	ПроверитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура РазвернутьНаСервере(ПолноеИмя,Имя,ТипМтд)	
	Попытка
		Массив = СтрРазделить(ПолноеИмя,".");
		Дерево = РеквизитФормыВЗначение("СписокВыбораИзДерева");
		Строка = ВернутьСтрокуДерева(Массив,2,Дерево,ТипМтд);
		Реквизиты = Метаданные.НайтиПоПолномуИмени(Имя).Реквизиты;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			Типы = Реквизит.Тип.Типы(); 	
			Для Каждого тип Из Типы Цикл
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр = Строка.Строки.Добавить();
				Стр.Поле = Реквизит.Имя;
				Стр.Тип = Тип;
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр.ПолноеИмя = ?(МТД = Неопределено,"",МТД.ПолноеИмя());
				Стр.ИмяВДереве = Объект.ОбъектКонфигурации + "." + Строка.Поле + "." + Реквизит.Имя;
			КонецЦикла;
		КонецЦикла;
		ЗначениеВРеквизитФормы(Дерево,"СписокВыбораИзДерева");		
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСтрокуДерева(Массив,Уровень,Родитель,ТипМтд)
	Для Каждого Строка Из Родитель.Строки Цикл
		Если Строка.Поле = Массив[Уровень] и Строка.Тип = ТипМтд Тогда
			Если Массив.Количество()-1 = Уровень Тогда 
				Возврат Строка;
			Иначе
				Возврат ВернутьСтрокуДерева(Массив,Уровень+1,Строка,ТипМтд);
			КонецЕсли;				
		КонецЕсли;			
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура Развернуть(Команда)
	ТекПоле = ЭтаФорма.Элементы.СписокВыбораИзДерева.ТекущиеДанные;
	РазвернутьНаСервере(ТекПоле.ИмяВДереве,ТекПоле.ПолноеИмя,ТекПоле.Тип);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКакПоле(Команда)
	Объект.Поле = ""; // ЭтаФорма.Элементы.СписокВыбораИзДерева.ТекущиеДанные.Поле;
	
	ПолноеИмя = ЭтаФорма.Элементы.СписокВыбораИзДерева.ТекущиеДанные.ИмяВДереве; 
	Массив = СтрРазделить(ПолноеИмя,".");
	
	Для а = 2 по Массив.Количество()-1 Цикл
		Объект.Поле = Объект.Поле + "." + Массив.Получить(а);
	КонецЦикла;
		
	ОбновитьКод();
КонецПроцедуры


&НаКлиенте
Процедура ТипРегистраПриИзменении(Элемент)
	ОбновитьКод();
КонецПроцедуры


&НаКлиенте
Процедура ОтборыПриИзменении(Элемент)
	ОбновитьКод();
КонецПроцедуры


&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
	//Пуш = Объект.Действие = Перечисления.ОСМИ_Действия.ПушРассылка;
	//ДинАкция = Объект.Действие = Перечисления.ОСМИ_Действия.МаркетинговаяАкция;
	//ЭтаФорма.Элементы.ТекстРассылкиимость.Видимость = ДинАкция или Пуш;
	//ЭтаФорма.Элементы.ТекстПоляимость = ДинАкция;
	//ЭтаФорма.Элементы.ТекстЗаголовка = ДинАкция;	
КонецПроцедуры


&НаСервере
Функция СоздатьРегламентноеЗаданиеНаСервере()
	Об = РеквизитФормыВЗначение("Объект");
	
	Отбор = Новый Структура;
	Отбор = Новый Структура;
	Отбор.Вставить("Метаданные",      Метаданные.РегламентныеЗадания.ОСМИ_РегламентноеЗадание);
	Отбор.Вставить("Предопределенное",Ложь);
	Отбор.Вставить("Ключ",Об.Ссылка.УникальныйИдентификатор());
	Задания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(отбор);
	
	Если Задания.Количество() > 0 тогда
		Задание = Задания[0];
	Иначе
		Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание(Метаданные.РегламентныеЗадания.ОСМИ_РегламентноеЗадание);
		Задание.Параметры.Добавить(Об.Ссылка);
		Задание.Ключ = Об.Ссылка.УникальныйИдентификатор();	
		Задание.Использование = Истина;
		Задание.Наименование = Об.Наименование;
		Задание.Записать();
		
		//Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Задание.Расписание);  		
		//Диалог.Показать() 		
	КонецЕсли;
	
	Возврат Задание.Расписание;
КонецФункции


&НаКлиенте
Процедура СоздатьРегламентноеЗадание(Команда)
	Расписание = СоздатьРегламентноеЗаданиеНаСервере();
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);  		
	
	Оповещение = Новый ОписаниеОповещения("УстановитьРасписание",ЭтотОбъект); 
	
	Диалог.Показать(Оповещение); 	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасписание(РАсписание,Параметры) Экспорт
	УстановитьРасписаниеНаСервере(Расписание);
КонецПроцедуры

&НаСервере
Процедура УстановитьРасписаниеНаСервере(Расписание) Экспорт
	Об = РеквизитФормыВЗначение("Объект");
	
	Отбор = Новый Структура;
	Отбор = Новый Структура;
	Отбор.Вставить("Метаданные",      Метаданные.РегламентныеЗадания.ОСМИ_РегламентноеЗадание);
	Отбор.Вставить("Предопределенное",Ложь);
	Отбор.Вставить("Ключ",Об.Ссылка.УникальныйИдентификатор());
	Задания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(отбор);
	
	Если Задания.Количество() > 0 тогда
		Задание = Задания[0];
		Задание.Расписание = РАсписание;
		Задание.Записать();		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьСейчасНаСервере()
	Об = РеквизитФормыВЗначение("Объект");
	Об.ОтработатьСобытие("РегламентноеЗадание"); 
	//ОСМИ Сделать 12.09.2016
	// 
	//	Добавить форму выбора
	//
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда)
	ВыполнитьСейчасНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ОтборыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Для Каждого СтрВход из ПараметрыПеретаскивания.Значение Цикл
		Стр = Объект.Отборы.Добавить();
		Стр.Параметр = СтрВход.Поле;
	КонецЦикла;
	ОтборыПриИзменении(Неопределено);

КонецПроцедуры

