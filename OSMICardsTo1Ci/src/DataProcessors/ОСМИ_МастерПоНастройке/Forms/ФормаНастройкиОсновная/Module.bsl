&НаСервере
Процедура ИсторияЗапросовОбновитьЖурналНаСервере()
	
	ТЗВР = РеквизитФормыВЗначение("ИсторияЗапросовЖурналРегистрации");	
	Отбор = новый Структура;
	Отбор.Вставить("Событие","ОСМИ.Отправка запроса");
	ВыгрузитьЖурналРегистрации(ТЗВР,Отбор,"Дата,Событие,Комментарий",,ИсторияЗапросовКоличествоСообщений);
	
	ТЗВР.Сортировать("Дата Убыв");
	
	ЗначениеВРеквизитФормы(ТЗВР,"ИсторияЗапросовЖурналРегистрации");
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияЗапросовОбновитьЖурнал(Команда)
	ИсторияЗапросовОбновитьЖурналНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаШаблонов(Команда)
	ОткрытьФорму("Обработка.ОСМИ_МастерПоНастройке.Форма.ФормаНастройкиШаблонов");
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНажатие(Элемент)
	ДобавитьНажатиеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВизуализироватьНастройку(СсылкаНаНастройку)
	
	ИмяБезПробелов = "Рекв_" + СтрЗаменить(XMLСтрока(СсылкаНаНастройку.Ссылка), "-", "");
	
	ДобавляемыеРеквизиты = Новый Массив();                                           
	
	МассивРек =  ЭтаФорма.ПолучитьРеквизиты();
	Есть = ложь;
	Для Каждого Рек из МассивРек Цикл
		Есть = Рек.Имя = ИмяБезПробелов;
		Если есть тогда прервать КонецЕсли;
	КонецЦикла;
	
	Если есть Тогда
		ЗначениеВРеквизитФормы(СсылкаНаНастройку,ИмяБезПробелов);
	Иначе
		
		Реквизит = Новый РеквизитФормы(
		ИмяБезПробелов,
		новый ОписаниеТипов("СправочникОбъект.ОСМИ_НастройкаСобытий"));
		
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		ЗначениеВРеквизитФормы(СсылкаНаНастройку,ИмяБезПробелов);
	КонецЕсли;
	
	
	
	
	Группа = ЭтаФорма.Элементы.Добавить(ИмяБезПробелов,Тип("ГруппаФормы"),ЭтаФорма.Элементы.Настройки);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Отображение = ОтображениеОбычнойГруппы.Нет;	
	Группа.ОтображатьЗаголовок = Ложь;
	//Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	Группа.Подсказка = ЭтаФорма[ИмяБезПробелов].ПодсказкаДляПользователя;
	Группа.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	//Группа.Доступность = не СсылкаНаНастройку.ПометкаУдаления;
	
	Эл = ЭтаФорма.Элементы.Добавить(
	ИмяБезПробелов+"Ссылка",
	Тип("ПолеФормы"),
	Группа);
	Эл.ПутьКДанным = ИмяБезПробелов+".Ссылка";
	Эл.Вид = ВидПоляФормы.ПолеВвода;
	Эл.ТолькоПросмотр = Истина;	
	
	//Эл = ЭтаФорма.Элементы.Добавить(
	//ИмяБезПробелов+"Наименование",
	//Тип("ПолеФормы"),
	//Группа);
	//Эл.ПутьКДанным = ИмяБезПробелов+".Наименование";
	//Эл.Вид = ВидПоляФормы.ПолеВвода;
	
	Эл = ЭтаФорма.Элементы.Добавить(
	ИмяБезПробелов+"Использование",
	Тип("ПолеФормы"),
	Группа);
	Эл.ПутьКДанным = ИмяБезПробелов+".Использование";
	Эл.Вид = ВидПоляФормы.ПолеФлажка;
	Эл.УстановитьДействие("Приизменении","ИзменитьСправочник");
	
	
	Эл = ЭтаФорма.Элементы.Добавить(
	ИмяБезПробелов+"Удалить",
	Тип("ДекорацияФормы"),
	Группа);
	//Эл.ПутьКДанным = ИмяБезПробелов+".Использование";
	Эл.Вид = ВидДекорацииФормы.Картинка;
	Эл.Картинка = БиблиотекаКартинок.Удалить; 
	Эл.Гиперссылка = Истина;
	
	эл.УстановитьДействие("Нажатие","УдалитьНажатие");
	
КонецПроцедуры

&НаКлиенте 
Процедура ИзменитьСправочник(Элемент) 
	ИзменитьСправочникСервер(Элемент.Родитель.Имя);				
КонецПроцедуры

&НаСервере
Процедура ИзменитьСправочникСервер(ИмяПоля) 
	Об = РеквизитФормыВЗначение(ИмяПоля);		
	Об.Записать();
	ЗначениеВРеквизитФормы(Об,ИмяПоля);
КонецПроцедуры

&НаСервере
Процедура ДобавитьНажатиеНаСервере()
	Запрос = новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОСМИ_НастройкаСобытий.Наименование
	|ИЗ
	|	Справочник.ОСМИ_НастройкаСобытий КАК ОСМИ_НастройкаСобытий";
	Выб = запрос.Выполнить().Выбрать();
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Наименование");

	
	а = 0;   
	СтруктураПоиска.Наименование = "НоваяНастройка" + а;
	выб.Сбросить();
	
	Пока выб.НайтиСледующий(СтруктураПоиска) цикл        
		а = а + 1;
		СтруктураПоиска.Наименование = "НоваяНастройка" + а;
		выб.Сбросить();
	КонецЦикла;
	
	Настройка = Справочники.ОСМИ_НастройкаСобытий.СоздатьЭлемент();
	Настройка.Наименование = СтруктураПоиска.Наименование;
	Настройка.Записать();
	ВизуализироватьНастройку(Настройка);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьОтображение();	
	ШаблонПоУмолчанию = Константы.ОСМИ_ШаблонПоУмолчанию.Получить();
	EmailАдминистратора = Константы.ОСМИ_EmailАдминистратора.Получить();
	ОпределяемыеТипыНастроены = не  Метаданные.ОпределяемыеТипы.ОСМИ_ДисконтнаяКарта.Тип = Новый ОписаниеТипов("СправочникСсылка.ОСМИ_ЭлектроннаяКарта");
	
КонецПроцедуры

&НаКлиенте 
Процедура УдалитьНажатие(Элемент)
	Имя = Элемент.Родитель.Имя;
	УстановитьПометкуУдаления(Имя);	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПометкуУдаления(Имя)
	
	Об = РеквизитФормыВЗначение(Имя);
	Об.ПометкаУдаления = Истина;
	Об.Записать();
	

	
	ОбновитьОтображение();
	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображение()
	
	Пока ЭтаФорма.Элементы.Настройки.ПодчиненныеЭлементы.Количество() > 0 Цикл 
		Эл = ЭтаФорма.Элементы.Настройки.ПодчиненныеЭлементы.Получить(0);
		
		Пока Эл.ПодчиненныеЭлементы.Количество() > 0 Цикл 
			ЭтаФорма.Элементы.Удалить(Эл.ПодчиненныеЭлементы.Получить(0));	
		КонецЦикла;
		ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы.Настройки.ПодчиненныеЭлементы.Получить(0));
	КонецЦикла;

	Запрос = Новый Запрос;                                              
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОСМИ_НастройкаСобытий.Ссылка
	|ИЗ
	|	Справочник.ОСМИ_НастройкаСобытий КАК ОСМИ_НастройкаСобытий
	|ГДЕ
	|	НЕ ОСМИ_НастройкаСобытий.ПометкаУдаления";
	Настройки = Запрос.Выполнить().Выбрать();
	Пока Настройки.Следующий() Цикл
		ВизуализироватьНастройку(Настройки.Ссылка.ПолучитьОбъект());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаРегГрупп(Команда)
	ОткрытьФорму("Обработка.ОСМИ_МастерПоНастройке.Форма.ФормаНастройкиЗагрузкиАнкет");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Пинг = ОСМИ_РаботаСAPI.ПроверитьПодключениеКСервису();
	
	Если Не Пинг.Успех Тогда
		ОткрытьФорму("Обработка.ОСМИ_МастерПоНастройке.Форма.ФормаВводаПараметровСоединения",,,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;
	Если Не ОпределяемыеТипыНастроены Тогда
		ОткрытьФорму("Обработка.ОСМИ_МастерПоНастройке.Форма.ФормаИнструкции",,,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПоУмолчаниюПриИзменении(Элемент)
	ШаблонПоУмолчаниюПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ШаблонПоУмолчаниюПриИзмененииНаСервере()
	Константы.ОСМИ_ШаблонПоУмолчанию.Установить(ШаблонПоУмолчанию);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаВэбСервисов(Команда)
	ОткрытьФорму("Обработка.ОСМИ_МастерПоНастройке.Форма.ФормаНастройкиОповещений");
КонецПроцедуры

&НаКлиенте
Процедура НастройкаГрафики(Команда)
	ОткрытьФорму("Обработка.ОСМИ_МастерПоНастройке.Форма.ФормаРаботыСГрафикой");
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСоединения(Команда)
	ОткрытьФорму("Обработка.ОСМИ_МастерПоНастройке.Форма.ФормаВводаПараметровСоединения");
КонецПроцедуры

&НаКлиенте
Процедура НастройкаРегламентаПоПроверкиШаблонов(Команда)
	
	Расписание = СоздатьПолучитьРегламентроеЗаданиеНаСервере();
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);  		
	
	Оповещение = Новый ОписаниеОповещения("УстановитьРасписаниеПроверкиШаблона", ЭтотОбъект); 
	
	Диалог.Показать(Оповещение);
	
КонецПроцедуры

&НаСервере
Функция СоздатьПолучитьРегламентроеЗаданиеНаСервере()
	
	Отбор = Новый Структура;
	Отбор.Вставить("Метаданные",       Метаданные.РегламентныеЗадания.ОСМИ_ПроверкаШаблоновКарт);
	Отбор.Вставить("Предопределенное", Ложь);
	Отбор.Вставить("Ключ",             "ПроверкаШаблоновКарт");
	Задания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	
	Если Задания.Количество() > 0 тогда
		Задание = Задания[0];
	Иначе
		Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание(Метаданные.РегламентныеЗадания.ОСМИ_ПроверкаШаблоновКарт);
		Задание.Ключ = "ПроверкаШаблоновКарт";	
		Задание.Использование = Истина;
		Задание.Наименование = "Проверка шаблонов карт";
		Задание.Записать(); 		
	КонецЕсли;
	
	Возврат Задание.Расписание;
	
КонецФункции

&НаКлиенте
Процедура УстановитьРасписаниеПроверкиШаблона(Расписание, Параметры) Экспорт
	
	Если Расписание = Неопределено Тогда
		ПоказатьПредупреждение(, "Расписание не задано");
	Иначе
		УстановитьРасписаниеПроверкиШаблонаНаСервере(Расписание);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРасписаниеПроверкиШаблонаНаСервере(Расписание) Экспорт
	
	Отбор = Новый Структура;
	Отбор.Вставить("Метаданные",       Метаданные.РегламентныеЗадания.ОСМИ_ПроверкаШаблоновКарт);
	Отбор.Вставить("Предопределенное", Ложь);
	Отбор.Вставить("Ключ",             "ПроверкаШаблоновКарт");
	Задания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	
	Если Задания.Количество() > 0 тогда
		Задание = Задания[0];
		Задание.Расписание = Расписание;
		Задание.Записать();		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕмаилАдминистратораПриИзменении(Элемент)
	ЕмаилАдминистратораПриИзмененииСервер();
КонецПроцедуры

Процедура ЕмаилАдминистратораПриИзмененииСервер()
	Константы.ОСМИ_EmailАдминистратора.Установить(EmailАдминистратора);
КонецПроцедуры

